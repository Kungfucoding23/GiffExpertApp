{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAOlB,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DACbC,EADa,iDACmCC,UAAUR,GAD7C,+DAEAS,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,kEAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENvB,EAAQL,GAEH6B,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAACzB,IAGG0B,EDrBwBK,CAAa/B,GAAhCkB,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,2CAAd,SAA0DrB,IACzDyB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEiBlBgB,EA7BM,WAAO,IAAD,EAEaxC,mBAAS,IAFtB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KASvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ0C,EAAWnB,KAAI,SAAAd,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnB7BkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.689aaa4b.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(category => [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n                    \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=KJYm7HX3CDWX39cn8b0AJKzwGZFDzKBG`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url  // EL ? ES PARA PREGUNTAR QUE SI VIENEN LAS IMAGENS ENTONCES LAS UTILICE\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInTopLeft animate__slow\t2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInTopLeft\">{category}</h3>  \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }     \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n//este es un custom hook, funciona como un functional component \r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n\r\n            .then(imgs => {\r\n                  \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }); \r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state; // {devuelve el objeto}\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    // const handleAdd = (e) => {\r\n    //     // 'HunterXHunter'\r\n    //     setCategories( category => [...category, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    ))\r\n                }\r\n            </ol>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}